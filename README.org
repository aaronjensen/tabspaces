This package leverages tab-bar.el and project.el to create buffer-isolated
workspaces. It should work with emacs 27+. It is tested to work with a single
frame workflow, so I can't guarantee that it will work with multiple frames.

** Installation

This package is not currently on Melpa, so you'll have to clone or otherwise
download the repo and put it into your load path. Here's one possible way of
setting it up using [[https://github.com/jwiegley/use-package][use-package]] and [[https://github.com/raxod502/straight.el][straight]].

#+begin_src emacs-lisp
(use-package emacs-workspaces
  :straight (:type git :host github :repo "mclear-tools/emacs-workspaces")
  :commands (emacs-workspaces/create-workspace
             emacs-workspaces/create-new-project-and-workspace
             emacs-workspaces/open-existing-project-and-workspace))
#+end_src

** Setup

Note that no keybindings are set.

If you have [[https://github.com/minad/consult][consult]] installed you might want to implement the following in your
config:

#+begin_src emacs-lisp
  ;; Filter Buffers for Consult-Buffer

  (with-eval-after-load 'consult
    ;; hide full buffer list (still available with "b")
    (consult-customize consult--source-buffer :hidden t :default nil)
    ;; set consult-workspace buffer list
    (defvar consult--source-workspace
      (list :name     "Workspace Buffers"
            :narrow   ?w
            :category 'buffer
            :state    #'consult--buffer-state
            :default  t
            :items    (lambda ()
                        (emacs-workspaces--tab-bar-buffer-name-filter ((lambda () (consult--buffer-query :sort 'visibility
                                                                                                    :as #'buffer-name))))))

      "Set workspace buffer list for consult-buffer.")
    (push consult--source-workspace consult-buffer-sources))
#+end_src

This should seamlessly integrate workspace buffers into =consult-buffer=,
displaying workspace buffers by default and all buffers when narrowing using
"b".

By default the =*scratch*= buffer is included in all workspaces. You can modify
which buffers are included by changing the value of
=emacs-workspaces-workspace-create-permitted-buffer-names=.

If you want emacs to startup with initial buffers in a workspace you could do
something like the following:

#+begin_src emacs-lisp
  (defun my--workspace-setup ()
    "Set up workspace at startup."
    ;; Add *Messages* and *splash* to Tab \`Home\'
    (progn
      (emacs-workspaces/create-workspace)
      (tab-bar-rename-tab "Home")
      (when (get-buffer "*Messages*")
        (set-frame-parameter nil
                             'buffer-list
                             (cons (get-buffer "*Messages*")
                                   (frame-parameter nil 'buffer-list))))
      (when (get-buffer "*splash*")
        (set-frame-parameter nil
                             'buffer-list
                             (cons (get-buffer "*splash*")
                                   (frame-parameter nil 'buffer-list))))))

  (add-hook 'after-init-hook #'my--workspace-setup)
#+end_src


